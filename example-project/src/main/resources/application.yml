# Ball Framework Event Publisher 설정 예시
spring:
  application:
    name: ball-framework-example
  profiles:
    active: dev

# Ball Framework 이벤트 설정
ball:
  events:
    # 도메인 이벤트 설정 (프로세스 내부 처리)
    domain:
      # Publisher 설정
      enabled: true
      async: true
      enable-retry: true
      max-retry-attempts: 3
      retry-delay-ms: 1000
      timeout-ms: 5000
      enable-debug-logging: true
      enable-metrics: true
      validation:
        strict: true
        required-fields:
          - "id"
          - "type"
          - "occurredAt"
        max-id-length: 255
        max-type-length: 100
      
      # Consumer 설정
      consumer:
        enabled: true
        async: true
        enable-retry: true
        max-retry-attempts: 3
        retry-delay-ms: 1000
        timeout-ms: 5000
        enable-debug-logging: true
        enable-metrics: true
        fail-fast: false
        enable-failure-notification: true
        preserve-order: false
        handler-timeout-ms: 3000
        thread-pool:
          core-size: 5
          max-size: 20
          queue-capacity: 100
          keep-alive-seconds: 60
          thread-name-prefix: "domain-event-"

    # 통합 이벤트 설정 (서비스 간 통신)
    integration:
      enabled: true
      provider: kafka
      enable-debug-logging: true
      enable-metrics: true
      enable-retry: true
      max-retry-attempts: 3
      retry-delay-ms: 2000
      enable-dlq: true
      enable-health-check: true
      timeout-ms: 10000
      topic-prefix: "ball-example-"
      validation:
        require-tenant-id: false
        max-payload-size: 1048576
        required-metadata-fields:
          - "id"
          - "type"
          - "occurredAt"
          - "version"

      # Kafka 설정
      kafka:
        bootstrap-servers: localhost:9092
        default-topic: ball-example-integration-events
        synchronous: false
        retry-attempts: 3
        retry-backoff-ms: 1000
        dlq-topic-prefix: "dlq-ball-example-"
        default-dlq-topic: failed-integration-events
        producer:
          acks: all
          retries: 3
          batch-size: 16384
          linger-ms: 5
          buffer-memory: 33554432
          compression-type: gzip
          enable-idempotence: true
        admin:
          auto-create-topics: true
          default-partitions: 3
          default-replication-factor: 1
          topic-configs:
            cleanup.policy: delete
            retention.ms: "604800000"  # 7일
            compression.type: gzip

# Spring Kafka 설정
spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
        compression.type: gzip
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: ball-example-consumer-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        session.timeout.ms: 30000
        max.poll.interval.ms: 300000

# 비동기 처리 설정
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        thread-name-prefix: async-event-
        keep-alive: 60s

# 모니터링 설정
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ball-framework-example
      environment: ${spring.profiles.active}

# 로깅 설정
logging:
  level:
    io.clroot.ball: DEBUG
    io.clroot.example: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev

ball:
  events:
    domain:
      async: false  # 디버깅을 위해 동기 처리
      enable-debug-logging: true
      consumer:
        async: false  # 디버깅을 위해 동기 처리
        enable-debug-logging: true
        fail-fast: true  # 개발에서는 빠른 실패로 문제 발견
        thread-pool:
          core-size: 2  # 개발환경에서는 적은 스레드
          max-size: 5
    integration:
      enable-debug-logging: true
      kafka:
        synchronous: true  # 개발에서는 동기 처리
        admin:
          auto-create-topics: true

logging:
  level:
    root: INFO
    io.clroot.ball: DEBUG
    io.clroot.example: DEBUG

---
# 테스트 환경 설정
spring:
  config:
    activate:
      on-profile: test

ball:
  events:
    domain:
      async: false
      enable-retry: false
      enable-debug-logging: false
      validation:
        strict: false
      consumer:
        async: false
        enable-retry: false
        enable-debug-logging: false
        fail-fast: true  # 테스트에서는 빠른 실패
        enable-failure-notification: false
        thread-pool:
          core-size: 1  # 테스트에서는 최소 스레드
          max-size: 2
    integration:
      enabled: false  # 테스트에서는 통합 이벤트 비활성화

logging:
  level:
    root: WARN
    io.clroot.example: INFO

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod

ball:
  events:
    domain:
      async: true
      enable-debug-logging: false
      timeout-ms: 3000
    integration:
      enable-debug-logging: false
      validation:
        require-tenant-id: true
        max-payload-size: 524288  # 512KB
      kafka:
        bootstrap-servers: "${KAFKA_BOOTSTRAP_SERVERS:prod-kafka:9092}"
        producer:
          acks: all
          retries: 5
          delivery-timeout-ms: 300000
        admin:
          default-partitions: 10
          default-replication-factor: 3
          topic-configs:
            retention.ms: "2592000000"  # 30일
            min.insync.replicas: "2"

spring:
  kafka:
    bootstrap-servers: "${KAFKA_BOOTSTRAP_SERVERS:prod-kafka:9092}"

logging:
  level:
    root: INFO
    io.clroot.ball: INFO
    io.clroot.example: INFO
  file:
    name: /var/log/ball-framework-example.log
